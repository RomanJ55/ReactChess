{"version":3,"sources":["images/chess.png","components/Header.js","components/Square.js","components/Board.js","components/Turn.js","components/Footer.js","images/w_won.png","images/b_won.png","components/End.js","images/start_game.jpg","components/Start.js","components/Game.js","App.js","index.js"],"names":["Header","className","src","img","alt","React","Component","Square","j","i","imagePath","type","selected","player","style","background","border","onClick","axios","post","x","y","then","response","console","log","data","catch","error","process","Board","squares","rows","columns","board","key","colorNum","undefined","incheck","push","Turn","turn","turnText","toUpperCase","Footer","giveUpHandler","whiteTime","End","winner","startGameHandler","winnerLabel","fontSize","wWon","bWon","width","padding","Start","startImage","Game","useState","setData","loading","setLoading","setSquares","setTurn","running","setRunning","setWinner","useEffect","a","get","result","JSON","parse","fetchItems","game_running","is_winner","command","marginTop","white_time","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.74adfdd4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/chess.82a0327d.png\";","import React from \"react\";\r\nimport img from \"../images/chess.png\";\r\n\r\nexport default class Header extends React.Component {\r\n  render() {\r\n    return (\r\n      <header className=\"center\">\r\n        <img src={img} alt=\"\" />\r\n        <h1>Chess Game by RomJ55</h1>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst Square = ({ j, i, imagePath, type, selected, player }) => {\r\n  const clickHandler = () => {\r\n    axios\r\n      .post(`https://reactchess55.herokuapp.com/api/chess/post`, {\r\n        x: i,\r\n        y: j,\r\n        player: player,\r\n      })\r\n      .then(function (response) {\r\n        console.log(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <button\r\n      className=\"square\"\r\n      style={{\r\n        background: (j + i) % 2 ? \"white\" : \"black\",\r\n        border: selected\r\n          ? \"4px solid rgb(255,255,0)\"\r\n          : \"2px solid rgb(136, 127, 127)\",\r\n      }}\r\n      onClick={clickHandler}\r\n    >\r\n      <img src={process.env.PUBLIC_URL + imagePath} alt={type} />\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Square;\r\n","import React from \"react\";\r\nimport Square from \"./Square\";\r\n\r\nconst Board = ({ squares, rows, columns }) => {\r\n  let board = [];\r\n\r\n  for (let i = 0; i < rows; i++) {\r\n    for (let j = 0; j < columns; j++) {\r\n      let key = [i, j];\r\n      let type = -1;\r\n      let imagePath = \"/pieces/dummy.png\";\r\n      let colorNum = -1;\r\n      let player;\r\n      let selected;\r\n\r\n      if (!squares === undefined) {\r\n        if (squares[i][j]) {\r\n          type = squares[i][j].type;\r\n          selected = squares[i][j].selected;\r\n          player = squares[i][j].player;\r\n          colorNum = player === \"white\" ? 0 : 1;\r\n          imagePath = \"/pieces/\" + colorNum + \"0\" + type + \".png\";\r\n          if (type === 5 && squares[i][j].incheck) {\r\n            imagePath = \"/pieces/\" + colorNum + \"0\" + type + \"c.png\";\r\n          }\r\n        }\r\n      }\r\n\r\n      board.push(\r\n        <Square\r\n          key={key}\r\n          j={j}\r\n          i={i}\r\n          imagePath={imagePath}\r\n          type={type}\r\n          selected={selected}\r\n          player={player}\r\n        />\r\n      );\r\n    }\r\n  }\r\n\r\n  return <div className=\"board\">{board}</div>;\r\n};\r\n\r\nexport default Board;\r\n","import React from \"react\";\r\n\r\nconst Turn = ({ turn }) => {\r\n  const turnText = `${turn} Turn`;\r\n  return <h2>{turnText.toUpperCase()}</h2>;\r\n};\r\n\r\nexport default Turn;\r\n","import React from \"react\";\r\nimport Timer from \"./Timer\";\r\nimport Turn from \"./Turn\";\r\n\r\nconst Footer = ({ turn, whiteTime, giveUpHandler }) => {\r\n  return (\r\n    <div className=\"footer\">\r\n      <button className=\"gu-button\" onClick={giveUpHandler}>\r\n        Give up\r\n      </button>\r\n      <Turn turn={turn} />\r\n      {/* <Timer timer={whiteTime} timeoutHandler={giveUpHandler} /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","export default __webpack_public_path__ + \"static/media/w_won.900f06a0.png\";","export default __webpack_public_path__ + \"static/media/b_won.c8d4143d.png\";","import React from \"react\";\r\nimport wWon from \"../images/w_won.png\";\r\nimport bWon from \"../images/b_won.png\";\r\n\r\nconst End = ({ winner, startGameHandler }) => {\r\n  let winnerLabel = \"Winner: \" + winner;\r\n\r\n  return (\r\n    <div className=\"start\">\r\n      <h1 className=\"center\" style={{ fontSize: 50 }}>\r\n        {winnerLabel.toUpperCase()}\r\n      </h1>\r\n      <img\r\n        src={winner === \"white\" ? wWon : bWon}\r\n        alt=\"\"\r\n        style={{ width: 320, padding: 3 }}\r\n      />\r\n      <button className=\"se-button\" onClick={startGameHandler}>\r\n        Play again\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default End;\r\n","export default __webpack_public_path__ + \"static/media/start_game.553f5179.jpg\";","import React from \"react\";\r\nimport startImage from \"../images/start_game.jpg\";\r\n\r\nconst Start = ({ startGameHandler }) => {\r\n  return (\r\n    <div className=\"start\">\r\n      <img src={startImage} style={{ width: 700 }} alt=\"\" />\r\n      <button className=\"se-button\" onClick={startGameHandler}>\r\n        Start game\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Start;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport Timer from \"./Timer\";\r\nimport Board from \"./Board\";\r\nimport Footer from \"./Footer\";\r\nimport End from \"./End\";\r\nimport Start from \"./Start\";\r\n\r\nconst Game = () => {\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [squares, setSquares] = useState([[]]);\r\n  const [turn, setTurn] = useState([]);\r\n  const [running, setRunning] = useState([]);\r\n  const [winner, setWinner] = useState([]);\r\n  // const [selectedSquare, setSelectedSquare] = useState(-1);\r\n\r\n  useEffect(() => {\r\n    const fetchItems = async () => {\r\n      const result = await axios.get(\r\n        `https://reactchess55.herokuapp.com/api/chess`\r\n      );\r\n      setData(JSON.parse(result.data));\r\n      setLoading(false);\r\n    };\r\n    fetchItems();\r\n    setSquares(data.board);\r\n    setTurn(data.turn);\r\n    setRunning(data.game_running);\r\n    setWinner(data.is_winner);\r\n  }, [data]);\r\n\r\n  const giveUpHandler = () => {\r\n    axios\r\n      .post(`https://reactchess55.herokuapp.com/api/chess/startend`, {\r\n        command: \"end\",\r\n      })\r\n      .then(function (response) {\r\n        console.log(response);\r\n        // setIsWinner(data.is_winner);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const startGameHandler = () => {\r\n    axios\r\n      .post(`https://reactchess55.herokuapp.com/api/chess/startend`, {\r\n        command: \"start\",\r\n      })\r\n      .then(function (response) {\r\n        console.log(response);\r\n        // setIsWinner(data.is_winner);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {loading ? (\r\n        <h3 className=\"center\" style={{ marginTop: 200, fontSize: 40 }}>\r\n          Loading.....\r\n        </h3>\r\n      ) : null}\r\n      {running ? (\r\n        <div className=\"game\">\r\n          {/* <div className=\"top-timer\">\r\n            <Timer timer={data.black_time} timeoutHandler={giveUpHandler} />\r\n          </div> */}\r\n          <Board squares={squares} rows={data.rows} columns={data.columns} />\r\n          <Footer\r\n            turn={turn}\r\n            whiteTime={data.white_time}\r\n            giveUpHandler={giveUpHandler}\r\n          />\r\n        </div>\r\n      ) : winner ? (\r\n        <End winner={data.winner} startGameHandler={startGameHandler} />\r\n      ) : (\r\n        <Start startGameHandler={startGameHandler} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Game;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Header from \"./components/Header\";\nimport Game from \"./components/Game\";\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <Header />\n      <Game />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}